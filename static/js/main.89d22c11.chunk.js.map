{"version":3,"sources":["components/organisms/Canvas.js","components/organisms/Form.js","components/atoms/DefaultOption.js","components/molecues/SelectWrapper.js","components/molecues/Navbar.js","components/organisms/CovidSection.js","App.js","index.js"],"names":["Canvas","data","chartType","datas","color","isName","chartRef","useRef","useEffect","myChartRef","current","getContext","canvas","maxheight","Chart","type","labels","map","item","index","datasets","backgroundColor","options","id","ref","FormWrapper","styled","form","Input","input","DataInfo","span","Form","handleInput","handleSubmit","onSubmit","onChange","placeholder","value","Option","option","DefaultOption","inner","InnerSelect","select","SelectWrapper","atributes","handleSelect","key","Navigation","nav","Navbar","to","CovidSection","state","api","bar","topten","fetchExam","a","fetch","response","json","exam","table","i","length","push","setState","console","error","fetchAll","res","resjson","Countries","name","Country","confirmed","String","TotalConfirmed","topValues","sort","b","slice","reverse","this","Confirmed","aconfirmed","polDataset","label","borderColor","fill","Active","Deaths","Recovered","tp","React","Component","Header","header","MainWrapper","div","ChartEditSection","FlexWrapper","App","mess","rChart","createRef","e","prevState","preventDefault","target","removeData","unmountComponentAtNode","document","getElementById","firstChild","body","removeChild","newChart","ReactDOM","render","basename","process","exact","path","hex","onClick","StrictMode"],"mappings":"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","file":"static/js/main.89d22c11.chunk.js","sourcesContent":["import React,{useEffect,useRef} from 'react'\r\nimport Chart from \"chart.js\";\r\n\r\nconst Canvas=({data,chartType,color,datas,isName})=>{\r\n    const chartRef = useRef(null)\r\n    useEffect(()=>{\r\n    const myChartRef =chartRef.current.getContext(\"2d\");\r\n    myChartRef.canvas.maxheight =600;\r\n        new Chart(myChartRef,{\r\n            type: chartType,\r\n            data: {\r\n                labels:isName?data:(data.map((item,index) =>`${index+1}`)),\r\n                datasets: datas.map(item=>item),\r\n                backgroundColor:'rgba(255, 99, 132, 0.2)',\r\n           \r\n            },\r\n            \r\n            options: {\r\n              \r\n            }\r\n        }) \r\n})\r\n    return(\r\n        <canvas\r\n            id=\"myChart\"\r\n            ref={chartRef}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Canvas","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FormWrapper = styled.form`\r\ndisplay:flex;\r\nalign-items: center;\r\njustify-content:space-between;\r\nflex-direction:column;\r\npadding:10px;\r\nwidth:50%;\r\nmargin: 30px 40vw;\r\n`\r\nconst Input= styled.input`\r\nheight: 30%;\r\nwidth:100%;\r\ntext-align:center;\r\nfont-size:2rem;\r\npadding:6px 20px;\r\n`\r\nconst DataInfo=styled.span`\r\nfont-size:2.5rem;\r\nwidth:200%;\r\n`\r\nconst Form=({handleInput,handleSubmit, data})=>(\r\n    <FormWrapper onSubmit={handleSubmit}>\r\n        <Input onChange={handleInput} type='number' placeholder='point'/>\r\n        <Input type='submit' value='Add'/>\r\n        <DataInfo>Data in chart:{data.map(item=>`${item} , `)}</DataInfo>\r\n    </FormWrapper>\r\n)\r\nexport default Form;","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst Option = styled.option`\r\npadding:10px;\r\n`\r\nconst DefaultOption=({inner})=> <Option>{inner}</Option>\r\nexport default DefaultOption","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport DefaultOption from '../atoms/DefaultOption'\r\nconst InnerSelect = styled.select`\r\npadding:10px;\r\n`\r\nconst SelectWrapper=({atributes,handleSelect})=>(\r\n    <>\r\n    <InnerSelect onChange={handleSelect}>\r\n        {atributes.map(item=>(\r\n            <DefaultOption key={item} value={item} inner={item}/>\r\n        ))}\r\n    </InnerSelect>\r\n    </>\r\n)\r\nexport default SelectWrapper;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport './Navbar.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nconst Navigation=styled.nav`\r\nmargin:0;\r\npadding:10px;\r\nwidth:100vw;\r\nbackground-color:#222;\r\ntext-align:center;\r\n`\r\nconst Navbar=()=>(\r\n                    <Navigation>\r\n                        <ul>\r\n                            <li>\r\n                            <NavLink to=\"/\">Home</NavLink>\r\n                            </li>\r\n                            <li>\r\n                            <NavLink to=\"/covid\">Covid</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </Navigation>\r\n)\r\nexport default Navbar;","import React from 'react'\r\nimport Canvas from './Canvas';\r\n\r\nclass CovidSection extends React.Component{\r\n    state={\r\n        api:[],\r\n        bar:[],\r\n        topten:[]\r\n    }\r\n    fetchExam=async()=>{\r\n        try {\r\n            const response = await fetch(`https://api.covid19api.com/total/country/poland`);\r\n            const exam = await response.json();\r\n            const table=[];\r\n            for(let i=0;i<exam.length;i++) table.push(exam[i])\r\n            this.setState({api:table})\r\n        } catch (error) {\r\n            console.error(error);\r\n        }}\r\n    fetchAll=async()=>{\r\n        try {\r\n            const res = await fetch('https://api.covid19api.com/summary');\r\n            const resjson = await res.json();\r\n            const bar=[];\r\n            for(let i=0;i<resjson.Countries.length;i++){\r\n                 bar.push({\r\n                    name:resjson.Countries[i].Country,\r\n                    confirmed:String(resjson.Countries[i].TotalConfirmed)\r\n            })}\r\n            const topValues = bar.sort((a,b) => b.confirmed-a.confirmed).slice(0,20).reverse();\r\n            this.setState({topten:topValues})\r\n            this.setState({bar:bar})\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetchExam()\r\n        this.fetchAll()\r\n    }\r\n    render(){\r\n        const {api,topten}= this.state\r\n        const confirmed = api.map(item=>String(item.Confirmed))\r\n        const aconfirmed = topten.map(item=>String(item.confirmed))\r\n        const active = api.map(item=>String(item.Active))\r\n        const deaths = api.map(item=>String(item.Deaths))\r\n        const recovered = api.map(item=>String(item.Recovered))\r\n        const polDataset=[{\r\n            label: 'Confirmed Cases',\r\n            data: confirmed,\r\n            borderColor: `red`,\r\n            fill: false,\r\n        },{\r\n            label: 'Active Cases',\r\n            data: active,\r\n            borderColor: 'blue',\r\n            fill: false,\r\n        },{\r\n            label: \"Deaths\",\r\n            data: deaths,\r\n            borderColor: 'black',\r\n            fill: false,\r\n        },\r\n        {\r\n            label: \"Recovered\",\r\n            data: recovered,\r\n            borderColor: `green`,\r\n            fill: false,\r\n        },]\r\n        let tp=[]\r\n            tp.push({\r\n                    label:'',\r\n                    data: aconfirmed,\r\n                    borderColor: `red`,\r\n                    fill: true\r\n        })\r\n    return(\r\n        <>\r\n            <h1>Covid api</h1>\r\n            <h2>Poland</h2>\r\n            <Canvas data={confirmed} chartType='line' color='blue'datas={polDataset}/>\r\n            <h2>Global top 10</h2>\r\n            <Canvas data={topten.map(item=>item.name)} isName chartType='bar' color='blue'datas={tp}/>\r\n        </>\r\n    )}\r\n    }\r\nexport default CovidSection;\r\n","import React from 'react';\r\nimport Canvas from './components/organisms/Canvas'\r\nimport ReactDOM,{ unmountComponentAtNode } from 'react-dom';\r\nimport Form from './components/organisms/Form';\r\nimport SelectWrapper from './components/molecues/SelectWrapper'\r\nimport './App.css'\r\nimport styled from 'styled-components';\r\nimport { SwatchesPicker } from 'react-color'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport Navbar from './components/molecues/Navbar';\r\nimport CovidSection from './components/organisms/CovidSection'\r\nconst Header= styled.header`\r\ntext-align:center;\r\nfont-size:9rem;\r\nfont-weight:bold;\r\n`\r\nconst MainWrapper = styled.div`\r\npadding:10px 150px;\r\ntext-align:center;\r\n`\r\nconst ChartEditSection = styled.div`\r\nwidth:40%;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:space-between;\r\n`\r\nconst FlexWrapper= styled.div`\r\nheight: 100%;\r\nwidth:100vw;\r\ndisplay:flex;\r\nflex-direction:row;\r\njustify-content: space-between;\r\n`\r\n\r\nclass App extends React.Component {\r\n    state={\r\n      data:[],\r\n      chartType:'line',\r\n      mess:'',\r\n      color:'blue',\r\n    }\r\n    rChart = React.createRef();\r\n    handleSubmit=(e,prevState)=>{\r\n      e.preventDefault()\r\n      this.setState({data:[...this.state.data,this.state.mess]})\r\n    }\r\n    \r\n    handleInput=(e)=>{\r\n      this.setState({mess:e.target.value})\r\n    }\r\n    handleSelect=(e)=>{\r\n      this.setState({chartType:e.target.value})\r\n    }\r\n    removeData=()=>{\r\n      this.setState({data:[]})\r\n      unmountComponentAtNode(document.getElementById('app'))\r\n      while(this.rChart.firstChild){document.body.removeChild(this.rChart.firstChild);}\r\n    }\r\n    newChart=(e)=>{\r\n      e.preventDefault()\r\n      unmountComponentAtNode(document.getElementById('app'))\r\n      while(this.rChart.firstChild){document.body.removeChild(this.rChart.firstChild);}\r\n      ReactDOM.render(<Canvas data={this.state.data} chartType={this.state.chartType} color={this.state.color} datas={[{\r\n        label: \"Chart\",\r\n        data: this.state.data,\r\n        borderColor: `${this.state.color}`,\r\n        fill: false,\r\n    }]}/>,document.getElementById('app'));\r\n    }\r\n  \r\n    render() {\r\n      const switchAtributes=['line','bar','radar','pie']\r\n      const {data}= this.state\r\n        return (\r\n          <BrowserRouter  basename={process.env.PUBLIC_URL}>\r\n            <Navbar/>\r\n              <MainWrapper>\r\n                <Header>ChartMaker</Header>\r\n                <Switch>\r\n                  <Route exact path='/'>\r\n                      <FlexWrapper>\r\n                      <ChartEditSection>\r\n                        <SelectWrapper atributes={switchAtributes} handleSelect={this.handleSelect}/>\r\n                        <SwatchesPicker onChange={(e)=>this.setState({color:e.hex})}/>\r\n                        <button onClick={this.newChart}>Make chart</button>\r\n                        <button onClick={this.removeData}>Remove data</button>\r\n                      </ChartEditSection>\r\n                      <Form \r\n                          handleSubmit={this.handleSubmit}\r\n                          handleInput={this.handleInput}\r\n                          data={data}\r\n                      />\r\n                      </FlexWrapper>\r\n                      <div id='app' ref={this.rChart}>\r\n                        </div>\r\n                  </Route>\r\n                <Route path='/covid'>\r\n                    <CovidSection select={this.handleSelect}/>\r\n                </Route>\r\n              </Switch>\r\n              </MainWrapper>\r\n            </BrowserRouter>\r\n        )\r\n    } \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}